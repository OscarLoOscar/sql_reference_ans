CREATE DATABASE EXERCISE4;

USE EXERCISE4;

CREATE TABLE PLAYERS(
PLAYER_ID INTEGER NOT NULL UNIQUE,
GROUP_ID INTEGER NOT NULL
);

CREATE TABLE MATCHES(
MATCH_ID INTEGER NOT NULL UNIQUE,
FIRST_PLAYER INTEGER NOT NULL,
SECOND_PLAYER INTEGER NOT NULL ,
FIRST_SCORE INTEGER NOT NULL,
SECOND_SCORE INTEGER NOT NULL
);

INSERT INTO PLAYERS VALUES
(20,2),
(30,1),
(40,3),
(45,1),
(50,2),
(65,1)
;

INSERT INTO MATCHEs VALUES 
(1,30,45,10,12),
(2,20,50,5,5),
(13,65,45,10,10),
(5,30,65,3,15),
(42,45,65,8,4)
;

-- SELECT M3.GROUP_ID , M3.PLAYER_ID AS WINNER_ID
-- FROM MATCHED M3
-- WHERE

SELECT M1.MATCH_ID , M1.FIRST_PLAYER , M1.FIRST_SCORE
FROM MATCHEs M1 ;

-- UNION
SELECT M2.MATCH_ID , M2.SECOND_PLAYER , M2.SECOND_SCORE
FROM MATCHES M2 ;

--

WITH GroupScores AS (
  SELECT
    p.GROUP_ID,
    p.PLAYER_ID,
    SUM(CASE WHEN p.PLAYER_ID = m.FIRST_PLAYER THEN m.FIRST_SCORE ELSE m.SECOND_SCORE END) AS TOTAL_SCORE
  FROM
    PLAYERS p
    JOIN MATCHED m ON p.PLAYER_ID = m.FIRST_PLAYER OR p.PLAYER_ID = m.SECOND_PLAYER
  GROUP BY
    p.GROUP_ID,
    p.PLAYER_ID
),
RankPlayers AS (
  SELECT
    GROUP_ID,
    PLAYER_ID,
    TOTAL_SCORE,
    ROW_NUMBER() OVER (PARTITION BY GROUP_ID ORDER BY TOTAL_SCORE DESC, PLAYER_ID ASC) AS rn
  FROM
    GroupScores
)
SELECT
  GROUP_ID,
  PLAYER_ID AS WINNER_ID
FROM
  RankPlayers
WHERE
  rn = 1
ORDER BY
  GROUP_ID;


--
WITH TEMP AS 
(SELECT MATCH_ID, FIRST_PLAYER AS PLAYER, FIRST_SCORE AS SCORE
FROM MATCHES
UNION ALL
SELECT MATCH_ID, SECOND_PLAYER AS PLAYER, SECOND_SCORE AS SCORE
FROM MATCHES), 

EACH_GAME AS(
SELECT PLAYER, SUM(SCORE) AS SCORE FROM TEMP GROUP BY PLAYER
),
RANKING AS(
SELECT ROW_NUMBER() over (partition by P.GROUP_ID ORDER BY E.SCORE DESC) as row_num,
P.PLAYER_ID, P.GROUP_ID, E.SCORE 
FROM PLAYERS P
LEFT JOIN EACH_GAME E
ON P.PLAYER_ID = E.PLAYER
ORDER BY GROUP_ID , SCORE DESC, PLAYER_ID
)

SELECT GROUP_ID, PLAYER_ID AS WINNER_ID FROM RANKING WHERE ROW_NUM =1;

--

SELECT result.PLAYER, SUM(result.SCORE )
FROM 
(SELECT MATCH_ID, FIRST_PLAYER AS PLAYER, FIRST_SCORE AS SCORE
FROM MATCHES
UNION ALL
SELECT MATCH_ID, SECOND_PLAYER AS PLAYER, SECOND_SCORE AS SCORE
FROM MATCHES) AS result ;

--

WITH TEMP AS 
(SELECT MATCH_ID, FIRST_PLAYER AS PLAYER, FIRST_SCORE AS SCORE
FROM MATCHES
UNION ALL
SELECT MATCH_ID, SECOND_PLAYER AS PLAYER, SECOND_SCORE AS SCORE
FROM MATCHES), 

EACH_GAME AS(
SELECT PLAYER, SUM(SCORE) AS SCORE FROM TEMP GROUP BY PLAYER
),
RANKING AS(
SELECT ROW_NUMBER() over (partition by P.GROUP_ID ORDER BY E.SCORE DESC) as row_num,
P.PLAYER_ID, P.GROUP_ID, E.SCORE 
FROM PLAYERS P
LEFT JOIN EACH_GAME E
ON P.PLAYER_ID = E.PLAYER
ORDER BY GROUP_ID , SCORE DESC, PLAYER_ID
)

SELECT GROUP_ID, PLAYER_ID AS WINNER_ID FROM RANKING WHERE ROW_NUM =1;